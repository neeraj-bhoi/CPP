objective : 
    - make 3 lambda functions and 1 adapter function in the functionalities section
    - each lambda takes one vector of integers and returns void
    - the lambda functions are :
        1)to find first element of the vector
        2)to find last element of the vector
        3)to return the size of the vector
    - the adaptor must accept only one of the above lambdas at a time along with a
        container of integers












Engine() = delete;
Engine(const Engine&) = delete;
Engine(Engine&&) = delete;
Engine& operator=(const Engine&) = delete;
Engine&& operator=(Engine&&) = delete;
~Engine() {}




#ifndef EMPTYCONTAINEREXCEPTION_H
#define EMPTYCONTAINEREXCEPTION_H

#include<stdexcept>
#include<cstring>

class EmptyContainerException : public std::exception
{
private:
    /* data */
    char* _msg;
public:
    /*  */
    EmptyContainerException() = delete;
    EmptyContainerException(const EmptyContainerException&) = delete;
    EmptyContainerException(EmptyContainerException&&) = default;
    EmptyContainerException& operator=(const EmptyContainerException&) = delete;
    EmptyContainerException&& operator=(EmptyContainerException&&) = delete;

    EmptyContainerException(const char* msg) {
        // strlen();
        _msg = new char[strlen(msg) + 1];
        strcpy(_msg, msg);
    }

    ~EmptyContainerException() {
        delete _msg;
    }

    virtual const char* what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW override {
        return _msg;
    }
};

#endif // EMPTYCONTAINEREXCEPTION_H
